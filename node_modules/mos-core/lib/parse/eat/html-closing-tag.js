'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = eatHTMLClosingTag;

var _isAlphabetic = require('../is-alphabetic');

var _isAlphabetic2 = _interopRequireDefault(_isAlphabetic);

var _isNumeric = require('../is-numeric');

var _isNumeric2 = _interopRequireDefault(_isNumeric);

var _isWhiteSpace = require('../is-white-space');

var _isWhiteSpace2 = _interopRequireDefault(_isWhiteSpace);

var _blockElements = require('../block-elements.json');

var _blockElements2 = _interopRequireDefault(_blockElements);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Try to match a closing tag.
 *
 * @param {string} value - Value to parse.
 * @param {boolean?} [isBlock] - Whether the tag-name
 *   must be a known block-level node to match.
 * @return {string?} - When applicable, the closing tag at
 *   the start of `value`.
 */
function eatHTMLClosingTag(value, isBlock) {
  var index = 0;
  var length = value.length;
  var queue = '';
  var subqueue = '';
  var character = void 0;

  if (value.charAt(index) === '<' && value.charAt(++index) === '/') {
    queue = '<' + '/';
    subqueue = character = value.charAt(++index);

    if (!(0, _isAlphabetic2.default)(character)) {
      return;
    }

    index++;

    /*
     * Eat as many alphabetic characters as
     * possible.
     */

    while (index < length) {
      character = value.charAt(index);

      if (!(0, _isAlphabetic2.default)(character) && !(0, _isNumeric2.default)(character)) {
        break;
      }

      subqueue += character;
      index++;
    }

    if (isBlock && _blockElements2.default.indexOf(subqueue.toLowerCase()) === -1) {
      return;
    }

    queue += subqueue;

    /*
     * Eat white-space.
     */

    while (index < length) {
      character = value.charAt(index);

      if (!(0, _isWhiteSpace2.default)(character)) {
        break;
      }

      queue += character;
      index++;
    }

    if (value.charAt(index) === '>') {
      return queue + '>';
    }
  }
}
module.exports = exports['default'];