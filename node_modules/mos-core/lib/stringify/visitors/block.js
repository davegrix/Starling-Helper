'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var BREAK = '\n\n';
var GAP = BREAK + '\n';

exports.default = function (compiler, node) {
  var values = [];
  var children = node.children;
  var index = -1;
  var prev = void 0;

  while (++index < children.length) {
    var child = children[index];

    if (prev) {
      /*
       * Duplicate nodes, such as a list
       * directly following another list,
       * often need multiple new lines.
       *
       * Additionally, code blocks following a list
       * might easily be mistaken for a paragraph
       * in the list itself.
       */

      if (child.type === prev.type && prev.type === 'list') {
        values.push(prev.ordered === child.ordered ? GAP : BREAK);
      } else if (prev.type === 'list' && child.type === 'code' && !child.lang) {
        values.push(GAP);
      } else {
        values.push(BREAK);
      }
    }

    values.push(compiler.visit(child, node));

    prev = child;
  }

  return values.join('');
};

module.exports = exports['default'];