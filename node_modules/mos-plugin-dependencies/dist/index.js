'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

exports.default = plugin;

var _renderDeps = require('./render-deps');

var _renderDeps2 = _interopRequireDefault(_renderDeps);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var shield = require('shieldman');

function plugin(mos, markdown) {
  mos.scope.dependencies = function (opts) {
    opts = opts || {};

    return '## <a name="dependencies">Dependencies</a>' + maybeShield('deps', opts.shield) + '\n\n' + (0, _renderDeps2.default)({
      deps: markdown.pkg.dependencies,
      pkgRoot: markdown.pkgRoot
    }) + '\n';
  };

  mos.scope.devDependencies = function (opts) {
    opts = opts || {};

    return '## <a name="dev-dependencies">Dev Dependencies</a>' + maybeShield('devDeps', opts.shield) + '\n\n' + (0, _renderDeps2.default)({
      deps: markdown.pkg.devDependencies,
      pkgRoot: markdown.pkgRoot
    }) + '\n';
  };

  function maybeShield(shieldName, style) {
    if (! ~['boolean', 'string'].indexOf(typeof style === 'undefined' ? 'undefined' : (0, _typeof3.default)(style)) || !style) {
      return '';
    }

    style = style === true ? null : style;

    testRepo(markdown.repo);

    var shieldProps = shield(shieldName, {
      repo: markdown.repo.user + '/' + markdown.repo.repo,
      branch: 'master',
      style: style
    });

    return ' ' + renderShield(shieldProps);
  }
}

plugin.attributes = {
  pkg: require('../package.json')
};

function testRepo(repo) {
  if (!repo || repo.host !== 'github.com') {
    throw new Error('The shields plugin only works for github repos');
  }
}

function renderShield(shieldProps) {
  return '[![' + shieldProps.text + '](' + shieldProps.image + ')](' + shieldProps.link + ')';
}
module.exports = exports['default'];