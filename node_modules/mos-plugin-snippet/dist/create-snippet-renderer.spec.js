'use strict';

var _mocha = require('mocha');

var _chai = require('chai');

var _createSnippetRenderer = require('./create-snippet-renderer');

var _createSnippetRenderer2 = _interopRequireDefault(_createSnippetRenderer);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _mocha.describe)('createSnippetRenderer', function () {
  var snippet = (0, _createSnippetRenderer2.default)({
    filePath: _path2.default.resolve(__dirname, './test/EMPTY.md')
  });

  (0, _mocha.it)('should get snippet from existing js file', function () {
    return snippet('./file-1.js#foo').then(function (md) {
      return (0, _chai.expect)(md).to.eq(['``` js', "console.log('foo')", "console.log('bar')", '```'].join('\n'));
    });
  });

  (0, _mocha.it)('should get snippet from existing css file', function () {
    return snippet('./file-2.css#bar').then(function (md) {
      return (0, _chai.expect)(md).to.eq(['``` css', '#bar {', '  color: red;', '}', '```'].join('\n'));
    });
  });

  (0, _mocha.it)('should get snippet from existing html file', function () {
    return snippet('./file-3.html#span').then(function (md) {
      return (0, _chai.expect)(md).to.eq(['``` html', '  <span>', '  </span>', '```'].join('\n'));
    });
  });

  (0, _mocha.it)('should get snippet from existing md file', function () {
    return snippet('./file-4.md#bar').then(function (md) {
      return (0, _chai.expect)(md).to.eq(['``` md', 'bar', '```'].join('\n'));
    });
  });

  (0, _mocha.it)('should get snippet from existing js file and add link to the source', function () {
    return snippet('./file-1.js#foo', { showSource: true }).then(function (md) {
      return (0, _chai.expect)(md).to.eq(['``` js', "console.log('foo')", "console.log('bar')", '```', '> Excerpt from [./file-1.js](./file-1.js#L8-L9)'].join('\n'));
    });
  });

  (0, _mocha.it)('should throw error when file not found', function (done) {
    snippet('./no-file.js#foo').catch(function (err) {
      (0, _chai.expect)(err).to.be.instanceOf(Error);
      done();
    });
  });

  (0, _mocha.it)('should throw error when anchor not found', function (done) {
    snippet('./file-1.js#not-found').catch(function (err) {
      (0, _chai.expect)(err).to.be.instanceOf(Error);
      (0, _chai.expect)(err.message).to.eq("Couldn't find anchor #not-found");
      done();
    });
  });

  (0, _mocha.it)('should load the whole file when no anchor specified', function () {
    return snippet('./file-1.js').then(function (md) {
      return (0, _chai.expect)(md).to.eq(['``` js', "'use strict'", '', 'console.log(1)', 'console.log(1)', 'console.log(1)', 'console.log(1)', '// #foo', "console.log('foo')", "console.log('bar')", '// #', 'console.log(2)', 'console.log(2)', 'console.log(2)', '```'].join('\n'));
    });
  });

  (0, _mocha.it)('should load the whole file when no anchor specified and add source footer', function () {
    return snippet('./file-1.js', { showSource: true }).then(function (md) {
      return (0, _chai.expect)(md).to.eq(['``` js', "'use strict'", '', 'console.log(1)', 'console.log(1)', 'console.log(1)', 'console.log(1)', '// #foo', "console.log('foo')", "console.log('bar')", '// #', 'console.log(2)', 'console.log(2)', 'console.log(2)', '```', '> File [./file-1.js](./file-1.js)'].join('\n'));
    });
  });

  (0, _mocha.it)('should get snippet from beginning of file and add source', function () {
    return snippet('./file-5.md#bar', { showSource: true }).then(function (md) {
      return (0, _chai.expect)(md).to.eq(['``` md', 'bar', '```', '> Excerpt from [./file-5.md](./file-5.md#L2-L2)'].join('\n'));
    });
  });
});