'use strict';

var _mocha = require('mocha');

var _chai = require('chai');

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _index = require('./index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _mocha.describe)('getMarkdownMeta', function () {
  (0, _mocha.it)('should return case-sensitive repo slug', function () {
    return (0, _index2.default)(_path2.default.resolve(__dirname, './test/case-sensitive/README.md')).then(function (opts) {
      (0, _chai.expect)(opts.repo.user).to.eq('SomE');
      (0, _chai.expect)(opts.repo.repo).to.eq('RePo');
    });
  });

  (0, _mocha.it)('should return markdown meta', function () {
    var filePath = _path2.default.resolve(__dirname, './test/package/README.md');
    return (0, _index2.default)(filePath).then(function (opts) {
      (0, _chai.expect)(opts.pkg.name).to.eq('foo');
      (0, _chai.expect)(opts.pkgRoot).to.match(/test\/package/);
      (0, _chai.expect)(opts.filePath).to.eq(filePath);
      (0, _chai.expect)(opts.repo.user).to.eq('foo');
      (0, _chai.expect)(opts.repo.repo).to.eq('bar');
    });
  });
});